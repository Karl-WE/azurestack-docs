<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dell Technologies â€“ CSI Driver installation using Dell CSI Operator</title>
    <link>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/</link>
    <description>Recent content in CSI Driver installation using Dell CSI Operator on Dell Technologies</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://dell.github.io/csm-docs/v2/csidriver/installation/operator/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V2: PowerFlex</title>
      <link>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/powerflex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/powerflex/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installing-csi-driver-for-powerflex-via-operator&#34;&gt;Installing CSI Driver for PowerFlex via Operator&lt;/h2&gt;
&lt;p&gt;The CSI Driver for Dell PowerFlex can be installed via the Dell CSI Operator.&lt;/p&gt;
&lt;p&gt;To deploy the Operator, follow the instructions available &lt;a href=&#34;../&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are sample manifests provided which can be edited to do an easy installation of the driver. Note that the deployment of the driver using the operator does not use any Helm charts. The installation and configuration parameters will be slightly different from the ones specified via the Helm installer.&lt;/p&gt;
&lt;p&gt;Kubernetes Operators make it easy to deploy and manage the entire lifecycle of complex Kubernetes applications. Operators use Custom Resource Definitions (CRD) which represents the application and use custom controllers to manage them.&lt;/p&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites:&lt;/h3&gt;
&lt;h4 id=&#34;sdc-deployment-for-operator&#34;&gt;SDC Deployment for Operator&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;This feature deploys the sdc kernel modules on all nodes with the help of an init container.&lt;/li&gt;
&lt;li&gt;For non-supported versions of the OS also do the manual SDC deployment steps given below. Refer to &lt;a href=&#34;https://hub.docker.com/r/dellemc/sdc&#34;&gt;https://hub.docker.com/r/dellemc/sdc&lt;/a&gt; for supported versions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; When the driver is created, MDM value for initContainers in driver CR is set by the operator from mdm attributes in the driver configuration file, 
config.yaml. An example of config.yaml is below in this document. Do not set MDM value for initContainers in the driver CR file manually.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; To use an sdc-binary module from customer ftp site:
&lt;ul&gt;
&lt;li&gt;Create a secret, sdc-repo-secret.yaml to contain the credentials for the private repo. To generate the base64 encoding of a credential:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;     echo -n &amp;lt;credential&amp;gt;| base64 -i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;secret sample to use:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;     apiVersion: v1
     kind: Secret
     metadata:
       name: sdc-repo-creds
       namespace: vxflexos
     type: Opaque
     data:
       # set username to the base64 encoded username, sdc default is
         username: &amp;lt;username in base64&amp;gt;
       # set password to the base64 encoded password, sdc default is
         password: &amp;lt;password in base64&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Create secret for FTP side by using the command &lt;code&gt;kubectl create -f sdc-repo-secret.yaml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Optionally, enable sdc monitor by uncommenting the section for sidecar in manifest yaml. Please note the following:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If using sidecar&lt;/strong&gt;, you will need to edit the value fields under the HOST_PID and MDM fields by filling the empty quotes with host PID and the MDM IPs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;If not using sidecar&lt;/strong&gt;, please leave this commented out &amp;ndash; otherwise, the empty fields will cause errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;example-cr--configsamplesvxflex_v220_ops_48yamlhttpsgithubcomdelldell-csi-operatorblobmastersamplesvxflex_v220_ops_48yaml&#34;&gt;Example CR:  &lt;a href=&#34;https://github.com/dell/dell-csi-operator/blob/master/samples/vxflex_v220_ops_48.yaml&#34;&gt;config/samples/vxflex_v220_ops_48.yaml&lt;/a&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;        sideCars:
    # Comment the following section if you don&#39;t want to run the monitoring sidecar
      - name: sdc-monitor
        envs:
        - name: HOST_PID
          value: &amp;quot;1&amp;quot;
        - name: MDM
          value: &amp;quot;&amp;quot;
      - name: external-health-monitor
        args: [&amp;quot;--monitor-interval=60s&amp;quot;]
    initContainers:
      - image: dellemc/sdc:3.6
        imagePullPolicy: IfNotPresent
        name: sdc
        envs:
          - name: MDM
            value: &amp;quot;10.x.x.x,10.x.x.x&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Please comment the sdc-monitor sidecar section if you are not using it. Blank values for MDM will result in error. Do not comment the external-health-monitor argument.&lt;/p&gt;
&lt;h3 id=&#34;manual-sdc-deployment&#34;&gt;Manual SDC Deployment&lt;/h3&gt;
&lt;p&gt;For detailed PowerFlex installation procedure, see the &lt;em&gt;Dell PowerFlex Deployment Guide&lt;/em&gt;. Install the PowerFlex SDC as follows:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the PowerFlex SDC from &lt;a href=&#34;https://www.dell.com/support&#34;&gt;Dell Online support&lt;/a&gt;. The filename is EMC-ScaleIO-sdc-*.rpm, where * is the SDC name corresponding to the PowerFlex installation version.&lt;/li&gt;
&lt;li&gt;Export the shell variable &lt;em&gt;MDM_IP&lt;/em&gt; in a comma-separated list using &lt;code&gt;export MDM_IP=xx.xxx.xx.xx,xx.xxx.xx.xx&lt;/code&gt;, where xxx represents the actual IP address in your environment. This list contains the IP addresses of the MDMs.&lt;/li&gt;
&lt;li&gt;Install the SDC per the &lt;em&gt;Dell PowerFlex Deployment Guide&lt;/em&gt;:
&lt;ul&gt;
&lt;li&gt;For Red Hat Enterprise Linux and CentOS, run &lt;code&gt;rpm -iv ./EMC-ScaleIO-sdc-*.x86_64.rpm&lt;/code&gt;, where * is the SDC name corresponding to the PowerFlex installation version.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To add more MDM_IP for multi-array support, run &lt;code&gt;/opt/emc/scaleio/sdc/bin/drv_cfg --add_mdm --ip 10.xx.xx.xx.xx,10.xx.xx.xx&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;install-driver&#34;&gt;Install Driver&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create namespace: 
Run &lt;code&gt;kubectl create namespace &amp;lt;driver-namespace&amp;gt;&lt;/code&gt; command using the desired name to create the namespace.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Prepare the config.yaml for driver configuration.&lt;/p&gt;
&lt;p&gt;Example: config.yaml&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; # Username for accessing PowerFlex system.	
 # Required: true
- username: &amp;quot;admin&amp;quot;
 # Password for accessing PowerFlex system.	
 # Required: true
 password: &amp;quot;password&amp;quot;
 # System name/ID of PowerFlex system.	
 # Required: true
 systemID: &amp;quot;ID1&amp;quot;
 # REST API gateway HTTPS endpoint for PowerFlex system.
 # Required: true
 endpoint: &amp;quot;https://127.0.0.1&amp;quot;
 # Determines if the driver is going to validate certs while connecting to PowerFlex REST API interface.
 # Allowed values: true or false
 # Required: true
 # Default value: true
 skipCertificateValidation: true 
 # indicates if this array is the default array
 # needed for backwards compatibility
 # only one array is allowed to have this set to true 
 # Required: false
 # Default value: false
 isDefault: true
 # defines the MDM(s) that SDC should register with on start.
 # Allowed values:  a list of IP addresses or hostnames separated by comma.
 # Required: true
 # Default value: none 
 mdm: &amp;quot;10.0.0.1,10.0.0.2&amp;quot;
 # Defines all system names used to create powerflex volumes
 # Required: false
 # Default value: none
 AllSystemNames: &amp;quot;name1,name2&amp;quot;
- username: &amp;quot;admin&amp;quot;
 password: &amp;quot;Password123&amp;quot;
 systemID: &amp;quot;ID2&amp;quot;
 endpoint: &amp;quot;https://127.0.0.2&amp;quot;
 skipCertificateValidation: true 
 mdm: &amp;quot;10.0.0.3,10.0.0.4&amp;quot;
 AllSystemNames: &amp;quot;name1,name2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After editing the file, run the following command to create a secret called &lt;code&gt;vxflexos-config&lt;/code&gt;
&lt;code&gt;kubectl create secret generic vxflexos-config -n &amp;lt;driver-namespace&amp;gt; --from-file=config=config.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the following command to replace or update the secret:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kubectl create secret generic vxflexos-config -n &amp;lt;driver-namespace&amp;gt; --from-file=config=config.yaml -o yaml --dry-run=client | kubectl replace -f -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System ID, MDM configuration, etc. now are taken directly from config.yaml. MDM provided in the input_sample_file.yaml will be overidden with MDM values in config.yaml.&lt;/li&gt;
&lt;li&gt;Please provide MDM values in input_sample_file.yaml so that it will be overidden by default value.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Custom Resource (CR) for PowerFlex using the sample files provided    &lt;a href=&#34;https://github.com/dell/dell-csi-operator/tree/master/samples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users should configure the parameters in CR. The following table lists the primary configurable parameters of the PowerFlex driver and their default values:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;replicas&lt;/td&gt;
&lt;td&gt;Controls the number of controller pods you deploy. If the number of controller pods is greater than the number of available nodes, excess pods will become stay in a pending state. Defaults are 2 which allows for Controller high availability.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Common parameters for node and controller&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT&lt;/td&gt;
&lt;td&gt;Enable list volume operation to include snapshots (since creating a volume from a snap actually results in a new snap)&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE&lt;/td&gt;
&lt;td&gt;Enable this to automatically delete all snapshots in a consistency group when a snap in the group is deleted&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_DEBUG&lt;/td&gt;
&lt;td&gt;To enable debug mode&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ALLOW_RWO_MULTI_POD_ACCESS&lt;/td&gt;
&lt;td&gt;Setting allowRWOMultiPodAccess to &amp;ldquo;true&amp;rdquo; will allow multiple pods on the same node to access the same RWO volume. This behavior conflicts with the CSI specification version 1.3. NodePublishVolume description that requires an error to be returned in this case. However, some other CSI drivers support this behavior and some customers desire this behavior. Customers use this option at their own risk.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the &lt;code&gt;kubectl create -f &amp;lt;input_sample_file.yaml&amp;gt;&lt;/code&gt; command to create PowerFlex custom resource. This command will deploy the CSI-PowerFlex driver.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Example CR for PowerFlex Driver
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: storage.dell.com/v1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;kind: CSIVXFlexOS
metadata:
name: test-vxflexos
namespace: test-vxflexos
spec:
driver:
configVersion: v2.2.0
replicas: 1
dnsPolicy: ClusterFirstWithHostNet
forceUpdate: false
common:
image: &amp;ldquo;dellemc/csi-vxflexos:v2.2.0&amp;rdquo;
imagePullPolicy: IfNotPresent
envs:
- name: X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT
value: &amp;ldquo;false&amp;rdquo;
- name: X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE
value: &amp;ldquo;false&amp;rdquo;
- name: X_CSI_DEBUG
value: &amp;ldquo;true&amp;rdquo;
- name: X_CSI_ALLOW_RWO_MULTI_POD_ACCESS
value: &amp;ldquo;false&amp;rdquo;
sideCars:
# comment the following section if you don&amp;rsquo;t want to run the monitoring sidecar
- name: sdc-monitor
envs:
- name: HOST_PID
value: &amp;ldquo;1&amp;rdquo;
- name: MDM
value: &amp;quot;&amp;quot;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # Uncomment the following to install &#39;external-health-monitor&#39; sidecar to enable health monitor of CSI volumes from Controller plugin.
  # Also set the env variable controller.envs.X_CSI_HEALTH_MONITOR_ENABLED  to &amp;quot;true&amp;quot;.
  # - name: external-health-monitor
  #   args: [&amp;quot;--monitor-interval=60s&amp;quot;]

controller:
  envs:
    # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from Controller plugin - volume condition.
    # Install the &#39;external-health-monitor&#39; sidecar accordingly.
    # Allowed values:
    #   true: enable checking of health condition of CSI volumes
    #   false: disable checking of health condition of CSI volumes
    # Default value: false
    - name: X_CSI_HEALTH_MONITOR_ENABLED
      value: &amp;quot;false&amp;quot;

node:
  envs:
    # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
    # Allowed values:
    #   true: enable checking of health condition of CSI volumes
    #   false: disable checking of health condition of CSI volumes
    # Default value: false
    - name: X_CSI_HEALTH_MONITOR_ENABLED
      value: &amp;quot;false&amp;quot;

initContainers:
  - image: dellemc/sdc:3.6
    imagePullPolicy: IfNotPresent
    name: sdc
    envs:
      - name: MDM
        value: &amp;quot;10.xx.xx.xx,10.xx.xx.xx&amp;quot;  #provide MDM value

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vxflexos-config-params
  namespace: test-vxflexos
data:
  driver-config-params.yaml: |
    CSI_LOG_LEVEL: &amp;quot;debug&amp;quot;
    CSI_LOG_FORMAT: &amp;quot;TEXT&amp;quot;
  ```
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;pre-requisite-for-installation-with-olm&#34;&gt;Pre-Requisite for installation with OLM&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt; Please run the following commands for creating the required ConfigMap before installing the dell-csi-operator using OLM.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    1. git clone https://github.com/dell/dell-csi-operator.git 
    2. cd dell-csi-operator 
    3. tar -czf config.tar.gz driverconfig/ 
    # Replace operator-namespace in the below command with the actual namespace where the operator will be deployed by OLM 
    4. kubectl create configmap dell-csi-operator-config --from-file config.tar.gz -n &amp;lt;operator-namespace&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;volume-health-monitoring&#34;&gt;Volume Health Monitoring&lt;/h2&gt;
&lt;p&gt;Volume Health Monitoring feature is optional and by default this feature is disabled for drivers when installed via operator.&lt;/p&gt;
&lt;p&gt;To enable this feature, add the below block to the driver manifest before installing the driver. This ensures to install external
health monitor sidecar. To get the volume health state value under controller should be set to true as seen below. To get the
volume stats value under node should be set to true.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; # Uncomment the following to install &#39;external-health-monitor&#39; sidecar to enable health monitor of CSI volumes from Controller plugin.
   # Also set the env variable controller.envs.X_CSI_HEALTH_MONITOR_ENABLED  to &amp;quot;true&amp;quot;.
   # - name: external-health-monitor
   #   args: [&amp;quot;--monitor-interval=60s&amp;quot;]
   
 # Install the &#39;external-health-monitor&#39; sidecar accordingly.
 # Allowed values:
 #   true: enable checking of health condition of CSI volumes
 #   false: disable checking of health condition of CSI volumes
 # Default value: false
  controller:
envs:
  - name: X_CSI_HEALTH_MONITOR_ENABLED
    value: &amp;quot;true&amp;quot;
node:
envs:
 # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
 # Allowed values:
 #   true: enable checking of health condition of CSI volumes
 #   false: disable checking of health condition of CSI volumes
 # Default value: false
  - name: X_CSI_HEALTH_MONITOR_ENABLED
    value: &amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>V2: PowerMax</title>
      <link>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/powermax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/powermax/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installing-csi-driver-for-powermax-via-operator&#34;&gt;Installing CSI Driver for PowerMax via Operator&lt;/h2&gt;
&lt;p&gt;CSI Driver for Dell PowerMax can be installed via the Dell CSI Operator.&lt;/p&gt;
&lt;p&gt;To deploy the Operator, follow the instructions available &lt;a href=&#34;../&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are sample manifests provided which can be edited to do an easy installation of the driver. Please note that the deployment of the driver using the operator does not use any Helm charts and the installation and configuration parameters will be slightly different from the ones specified via the Helm installer.&lt;/p&gt;
&lt;p&gt;Kubernetes Operators make it easy to deploy and manage the entire lifecycle of complex Kubernetes applications. Operators use Custom Resource Definitions (CRD) which represents the application and use custom controllers to manage them.&lt;/p&gt;
&lt;h3 id=&#34;prerequisite&#34;&gt;Prerequisite&lt;/h3&gt;
&lt;h4 id=&#34;create-secret-for-client-side-tls-verification-optional&#34;&gt;Create secret for client-side TLS verification (Optional)&lt;/h4&gt;
&lt;p&gt;Create a secret named powermax-certs in the namespace where the CSI PowerMax driver will be installed. This is an optional step and is only required if you are setting the env variable X_CSI_POWERMAX_SKIP_CERTIFICATE_VALIDATION to false. See the detailed documentation on how to create this secret &lt;a href=&#34;../../helm/powermax#certificate-validation-for-unisphere-rest-api-calls&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;install-driver&#34;&gt;Install Driver&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create namespace:
Run &lt;code&gt;kubectl create namespace &amp;lt;driver-namespace&amp;gt;&lt;/code&gt; using the desired name to create the namespace.&lt;/li&gt;
&lt;li&gt;Create PowerMax credentials:
Create a file called powermax-creds.yaml with the following content:
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;   apiVersion: v1
     kind: Secret
     metadata:
     name: powermax-creds
       # Replace driver-namespace with the namespace where driver is being deployed
       namespace: &amp;lt;driver-namespace&amp;gt;
     type: Opaque
     data:
       # set username to the base64 encoded username
       username: &amp;lt;base64 username&amp;gt;
       # set password to the base64 encoded password
       password: &amp;lt;base64 password&amp;gt;
     # Uncomment the following key if you wish to use ISCSI CHAP authentication (v1.3.0 onwards)
     # chapsecret: &amp;lt;base64 CHAP secret&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
Replace the values for the username and password parameters. These values can be obtained using base64 encoding as described in the following example:
&lt;pre&gt;&lt;code&gt;echo -n &amp;quot;myusername&amp;quot; | base64
echo -n &amp;quot;mypassword&amp;quot; | base64
# If mychapsecret is the ISCSI CHAP secret
echo -n &amp;quot;mychapsecret&amp;quot; | base64

&lt;/code&gt;&lt;/pre&gt;
Run the &lt;code&gt;kubectl create -f powermax-creds.yaml&lt;/code&gt; command to create the secret.&lt;/li&gt;
&lt;li&gt;Create a Custom Resource (CR) for PowerMax using the sample files provided &lt;a href=&#34;https://github.com/dell/dell-csi-operator/tree/master/samples&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Users should configure the parameters in CR. The following table lists the primary configurable parameters of the PowerMax driver and their default values:
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;replicas&lt;/td&gt;
&lt;td&gt;Controls the number of controller Pods you deploy. If controller Pods are greater than the number of available nodes, excess Pods will become stuck in pending. The default is 2 which allows for Controller high availability.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Common parameters for node and controller&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_K8S_CLUSTER_PREFIX&lt;/td&gt;
&lt;td&gt;Define a prefix that is appended to all resources created in the array; unique per K8s/CSI deployment; max length - 3 characters&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;XYZ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERMAX_ENDPOINT&lt;/td&gt;
&lt;td&gt;IP address of the Unisphere for PowerMax&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;https://0.0.0.0:8443&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_TRANSPORT_PROTOCOL&lt;/td&gt;
&lt;td&gt;Choose which transport protocol to use (ISCSI, FC, auto or None)&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;auto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERMAX_PORTGROUPS&lt;/td&gt;
&lt;td&gt;List of comma-separated port groups (ISCSI only). Example: &amp;ldquo;PortGroup1,PortGroup2&amp;rdquo;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_MANAGED_ARRAYS&lt;/td&gt;
&lt;td&gt;List of comma-separated array ID(s) which will be managed by the driver&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERMAX_PROXY_SERVICE_NAME&lt;/td&gt;
&lt;td&gt;Name of CSI PowerMax ReverseProxy service. Leave blank if not using reverse proxy&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_GRPC_MAX_THREADS&lt;/td&gt;
&lt;td&gt;Number of concurrent grpc requests allowed per client&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERMAX_DRIVER_NAME&lt;/td&gt;
&lt;td&gt;Set custom CSI driver name. For more details on this feature see the related &lt;a href=&#34;../../../features/powermax/#custom-driver-name&#34;&gt;documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_HEALTH_MONITOR_ENABLED&lt;/td&gt;
&lt;td&gt;Enable/Disable health monitor of CSI volumes from Controller and Node plugin. Provides details of volume status, usage and volume condition. As a prerequisite, external-health-monitor sidecar section should be uncommented in samples which would install the sidecar&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Node parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERMAX_ISCSI_ENABLE_CHAP&lt;/td&gt;
&lt;td&gt;Enable ISCSI CHAP authentication. For more details on this feature see the related &lt;a href=&#34;../../../features/powermax/#iscsi-chap&#34;&gt;documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;Execute the following command to create the PowerMax custom resource:&lt;code&gt;kubectl create -f &amp;lt;input_sample_file.yaml&amp;gt;&lt;/code&gt;. The above command will deploy the CSI-PowerMax driver.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;csi-powermax-reverseproxy&#34;&gt;CSI PowerMax ReverseProxy&lt;/h3&gt;
&lt;p&gt;CSI PowerMax ReverseProxy is an optional component that can be installed with the CSI PowerMax driver. For more details on this feature see the related &lt;a href=&#34;../../../features/powermax#csi-powermax-reverse-proxy&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you install CSI PowerMax ReverseProxy, dell-csi-operator will create a Deployment and ClusterIP service as part of the installation&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - To use the ReverseProxy with the CSI PowerMax driver, the ReverseProxy service should be created before you install the CSIPowerMax driver.&lt;/p&gt;
&lt;h4 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h4&gt;
&lt;p&gt;Create a TLS secret that holds an SSL certificate and a private key which is required by the reverse proxy server. 
Use a tool such as &lt;code&gt;openssl&lt;/code&gt; to generate this secret using the example below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    openssl genrsa -out tls.key 2048
    openssl req -new -x509 -sha256 -key tls.key -out tls.crt -days 3650
    kubectl create secret -n powermax tls revproxy-certs --cert=tls.crt --key=tls.key
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;set-the-following-parameters-in-the-csi-powermaxreverseproxy-spec&#34;&gt;Set the following parameters in the CSI PowerMaxReverseProxy Spec&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tlsSecret&lt;/strong&gt; : Provide the name of the TLS secret. If using the above example, it should be set to &lt;code&gt;revproxy-certs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt; : This section contains the details of the Reverse Proxy configuration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mode&lt;/strong&gt; : This value is set to &lt;code&gt;Linked&lt;/code&gt; by default. Do not change this value&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;linkConfig&lt;/strong&gt; : This section contains the configuration of the &lt;code&gt;Linked&lt;/code&gt; mode&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;primary&lt;/strong&gt; : This section holds details for the primary Unisphere which the Reverse Proxy will connect to&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;backup&lt;/strong&gt; : This optional section holds details for a backup Unisphere which the Reverse Proxy can connect 
to if the primary Unisphere is unreachable&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;url&lt;/strong&gt; : URL of the Unisphere server&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;skipCertificateValidation&lt;/strong&gt;: This setting determines if the client-side Unisphere certificate validation is required&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;certSecret&lt;/strong&gt;: Secret name which holds the CA certificates which was used to sign Unisphere SSL certificates. Mandatory if skipCertificateValidation is set to &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;standAloneConfig&lt;/strong&gt; : This section contains the configuration of the &lt;code&gt;StandAlone&lt;/code&gt; mode. Refer to the sample below for the detailed config&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: Only one of the &lt;code&gt;Linked&lt;/code&gt; or &lt;code&gt;StandAlone&lt;/code&gt; configurations needs to be supplied. The appropriate &lt;code&gt;mode&lt;/code&gt; needs to be set in the spec as well.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here is a sample manifest with each field annotated. A copy of this manifest is provided in the &lt;code&gt;samples&lt;/code&gt; folder&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: storage.dell.com/v1
kind: CSIPowerMaxRevProxy
metadata:
  name: powermax-reverseproxy # &amp;lt;- Name of the CSIPowerMaxRevProxy object
  namespace: test-powermax # &amp;lt;- Set the namespace to where you will install the CSI PowerMax driver
spec:
  # Image for CSI PowerMax ReverseProxy
  image: dellemc/csipowermax-reverseproxy:v1.4.0 # &amp;lt;- CSI PowerMax Reverse Proxy image
  imagePullPolicy: Always
  # TLS secret which contains SSL certificate and private key for the Reverse Proxy server
  tlsSecret: csirevproxy-tls-secret
  config:
    mode: Linked
    linkConfig:
      primary:
        url: https://0.0.0.0:8443 #Unisphere URL
        skipCertificateValidation: true # This setting determines if client side Unisphere certificate validation is to be skipped
        certSecret: &amp;quot;&amp;quot; # Provide this value if skipCertificateValidation is set to false
      backup: # This is an optional field and lets you configure a backup unisphere which can be used by proxy server
        url: https://0.0.0.0:8443 #Unisphere URL
        skipCertificateValidation: true
    standAloneConfig: # Set mode to &amp;quot;StandAlone&amp;quot; in order to use this config
       storageArrays:
          - storageArrayId: &amp;quot;000000000001&amp;quot;
             # Unisphere server managing the PowerMax array
            primaryURL: https://unisphere-1-addr:8443
             # proxyCredentialSecrets are used by the clients of the proxy to connect to it
             # If using proxy in the stand alone mode, then the driver must be provided the
             # same secret.
             # The format of the proxy credential secret are exactly the same as the unisphere credential secret
             # For using the proxy with the driver, use the same proxy credential secrets for
             # all the managed storage arrays
            proxyCredentialSecrets:
	      - proxy-creds
          - storageArrayId: &amp;quot;000000000002&amp;quot;
            primaryURL: https://unisphere-2-addr:8443
             # An optional backup Unisphere server managing the same array
             # This can be used by the proxy to fall back to in case the primary
             # Unisphere is inaccessible temporarily
            backupURL: unisphere-3-addr:8443
            proxyCredentialSecrets:
               - proxy-creds
       managementServers:
          - url: https://unisphere-1-addr:8443
             # Secret containing the credentials of the Unisphere server
            arrayCredentialSecret: unsiphere-1-creds
            skipCertificateValidation: true
          - url: https://unisphere-2-addr:8443
            arrayCredentialSecret: unsiphere-2-creds
            skipCertificateValidation: true
          - url: https://unisphere-3-addr:8443
            arrayCredentialSecret: unsiphere-3-creds
            skipCertificateValidation: true

&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;installation&#34;&gt;Installation&lt;/h4&gt;
&lt;p&gt;Copy the sample file - &lt;code&gt;powermax_reverseproxy.yaml&lt;/code&gt; from the &lt;code&gt;samples&lt;/code&gt; folder or use the sample available in the &lt;code&gt;OperatorHub&lt;/code&gt; UI&lt;br&gt;
Edit and input all required parameters and then use the &lt;code&gt;OperatorHub&lt;/code&gt; UI or run the following command to install the CSI PowerMax Reverse Proxy service:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl create -f powermax_reverseproxy.yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can query for the deployment and service created as part of the installation using the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl get deployment -n &amp;lt;namespace&amp;gt;
kubectl get svc -n &amp;lt;namespace&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is a new sample file - &lt;code&gt;powermax_revproxy_standalone_with_driver.yaml&lt;/code&gt; in the &lt;code&gt;samples&lt;/code&gt; folder which enables installation of
CSI PowerMax ReverseProxy in &lt;code&gt;StandAlone&lt;/code&gt; mode along with the CSI PowerMax driver. This mode enables the CSI PowerMax driver to connect
to multiple Unisphere servers for managing multiple PowerMax arrays. Please follow the same steps described above to install ReverseProxy
with this new sample file.&lt;/p&gt;
&lt;h2 id=&#34;dynamic-logging-configuration&#34;&gt;Dynamic Logging Configuration&lt;/h2&gt;
&lt;p&gt;This feature is introduced in CSI Driver for powermax version 2.0.0.&lt;/p&gt;
&lt;h3 id=&#34;operator-based-installation&#34;&gt;Operator based installation&lt;/h3&gt;
&lt;p&gt;As part of driver installation, a ConfigMap with the name &lt;code&gt;powermax-config-params&lt;/code&gt; is created using the manifest located in the sample file. This ConfigMap contains an attribute &lt;code&gt;CSI_LOG_LEVEL&lt;/code&gt; which specifies the current log level of the CSI driver. To set the default/initial log level user can set this field during driver installation.&lt;/p&gt;
&lt;p&gt;To update the log level dynamically user has to edit the ConfigMap &lt;code&gt;powermax-config-params&lt;/code&gt; and update &lt;code&gt;CSI_LOG_LEVEL&lt;/code&gt; to the desired log level.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl edit configmap -n powermax powermax-config-params
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;sample--crd-file-for--powermax&#34;&gt;Sample  CRD file for  powermax&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: storage.dell.com/v1
kind: CSIPowerMax
metadata:
  name: test-powermax
  namespace: test-powermax
spec:
  driver:
    # Config version for CSI PowerMax v2.2.0 driver
    configVersion: v2.2.0
    # replica: Define the number of PowerMax controller nodes
    # to deploy to the Kubernetes release
    # Allowed values: n, where n &amp;gt; 0
    # Default value: None
    replicas: 2
    dnsPolicy: ClusterFirstWithHostNet
    forceUpdate: false
    common:
      # Image for CSI PowerMax driver v2.2.0
      image: dellemc/csi-powermax:v2.2.0
      # imagePullPolicy: Policy to determine if the image should be pulled prior to starting the container.
      # Allowed values:
      #  Always: Always pull the image.
      #  IfNotPresent: Only pull the image if it does not already exist on the node.
      #  Never: Never pull the image.
      # Default value: None
      imagePullPolicy: IfNotPresent
      envs:
        # X_CSI_MANAGED_ARRAYS: Serial ID of the arrays that will be used for provisioning
        # Default value: None
        # Examples: &amp;quot;000000000001&amp;quot;, &amp;quot;000000000002&amp;quot;
        - name: X_CSI_MANAGED_ARRAYS
          value: &amp;quot;000000000000,000000000001&amp;quot;
        # X_CSI_POWERMAX_ENDPOINT: Address of the Unisphere server that is managing the PowerMax arrays
        # Default value: None
        # Example: https://0.0.0.1:8443
        - name: X_CSI_POWERMAX_ENDPOINT
          value: &amp;quot;https://0.0.0.0:8443/&amp;quot;
        # X_CSI_K8S_CLUSTER_PREFIX: Define a prefix that is appended onto
        # all resources created in the Array
        # This should be unique per K8s/CSI deployment
        # maximum length of this value is 3 characters
        # Default value: None
        # Examples: &amp;quot;XYZ&amp;quot;, &amp;quot;EMC&amp;quot;
        - name: X_CSI_K8S_CLUSTER_PREFIX
          value: &amp;quot;XYZ&amp;quot;
        # X_CSI_POWERMAX_PORTGROUPS: Define the set of existing port groups that the driver will use.
        # It is a comma separated list of portgroup names.
        # Required only in case of iSCSI port groups
        # Allowed values: iSCSI Port Group names
        # Default value: None
        # Examples: &amp;quot;pg1&amp;quot;, &amp;quot;pg1, pg2&amp;quot;
        - name: &amp;quot;X_CSI_POWERMAX_PORTGROUPS&amp;quot;
          value: &amp;quot;&amp;quot;
        # &amp;quot;X_CSI_TRANSPORT_PROTOCOL&amp;quot; can be &amp;quot;FC&amp;quot; or &amp;quot;FIBRE&amp;quot; for fibrechannel,
        # &amp;quot;ISCSI&amp;quot; for iSCSI, or &amp;quot;&amp;quot; for autoselection.
        # Allowed values:
        #   &amp;quot;FC&amp;quot;    - Fiber Channel protocol
        #   &amp;quot;FIBER&amp;quot; - Fiber Channel protocol
        #   &amp;quot;ISCSI&amp;quot; - iSCSI protocol
        #   &amp;quot;&amp;quot;      - Automatic selection of transport protocol
        # Default value: &amp;quot;&amp;quot; &amp;lt;empty&amp;gt;
        - name: &amp;quot;X_CSI_TRANSPORT_PROTOCOL&amp;quot;
          value: &amp;quot;&amp;quot;
        # X_CSI_POWERMAX_PROXY_SERVICE_NAME: Refers to the name of the proxy service in kubernetes
        # Set this to &amp;quot;powermax-reverseproxy&amp;quot; if you are installing the proxy
        # Allowed values: &amp;quot;powermax-reverseproxy&amp;quot;
        # default values: &amp;quot;&amp;quot; &amp;lt;empty&amp;gt;
        - name: &amp;quot;X_CSI_POWERMAX_PROXY_SERVICE_NAME&amp;quot;
          value: &amp;quot;&amp;quot;
        # X_CSI_GRPC_MAX_THREADS: Defines the maximum number of concurrent grpc requests.
        # Set this value to a higher number (max 50) if you are using the proxy
        # Allowed values: n, where n &amp;gt; 4
        # default values: None
        - name: &amp;quot;X_CSI_GRPC_MAX_THREADS&amp;quot;
          value: &amp;quot;4&amp;quot;

    sideCars:
      # Uncomment the following to install &#39;external-health-monitor&#39; sidecar to enable health monitor of CSI volumes from Controller plugin.
      # Also set the env variable controller.envs.X_CSI_HEALTH_MONITOR_ENABLED to &amp;quot;true&amp;quot; for controller plugin.
      # Also set the env variable node.envs.X_CSI_HEALTH_MONITOR_ENABLED to &amp;quot;true&amp;quot; for node plugin.
      #- name: external-health-monitor
      #  args: [&amp;quot;--monitor-interval=300s&amp;quot;]

    controller:
      envs:
        # X_CSI_HEALTH_MONITOR_ENABLED: Determines if the controller plugin will monitor health of CSI volumes- volume status, volume condition
        # Install the &#39;external-health-monitor&#39; sidecar accordingly.
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: &amp;quot;false&amp;quot;
    node:
      envs:
        # X_CSI_POWERMAX_ISCSI_ENABLE_CHAP: Determine if the node plugin is going to configure
        # ISCSI node databases on the nodes with the CHAP credentials
        # If enabled, the CHAP secret must be provided in the credentials secret
        # and set to the key &amp;quot;chapsecret&amp;quot;
        # Allowed values:
        #   &amp;quot;true&amp;quot;  - CHAP is enabled
        #   &amp;quot;false&amp;quot; - CHAP is disabled
        # Default value: &amp;quot;false&amp;quot;
        - name: &amp;quot;X_CSI_POWERMAX_ISCSI_ENABLE_CHAP&amp;quot;
          value: &amp;quot;false&amp;quot;
        # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin- volume usage, volume condition
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: &amp;quot;false&amp;quot;
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: powermax-config-params
  namespace: test-powermax
data:
  driver-config-params.yaml: |
    CSI_LOG_LEVEL: &amp;quot;debug&amp;quot;
    CSI_LOG_FORMAT: &amp;quot;JSON&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dell-csi-operator&lt;/code&gt; does not support the installation of CSI PowerMax ReverseProxy as a sidecar to the controller Pod. This facility is
only present with &lt;code&gt;dell-csi-helm-installer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Kubelet config dir path&lt;/code&gt; is not yet configurable in case of Operator based driver installation.&lt;/li&gt;
&lt;li&gt;Also, snapshotter and resizer sidecars are not optional to choose, it comes default with Driver installation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;volume-health-monitoring&#34;&gt;Volume Health Monitoring&lt;/h2&gt;
&lt;p&gt;This feature is introduced in CSI Driver for PowerMax version 2.2.0.&lt;/p&gt;
&lt;h3 id=&#34;operator-based-installation-1&#34;&gt;Operator based installation&lt;/h3&gt;
&lt;p&gt;Volume Health Monitoring feature is optional and by default this feature is disabled for drivers when installed via operator.&lt;/p&gt;
&lt;p&gt;To enable this feature, set  &lt;code&gt;X_CSI_HEALTH_MONITOR_ENABLED&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the driver manifest under controller and node section. Also, install the &lt;code&gt;external-health-monitor&lt;/code&gt; from &lt;code&gt;sideCars&lt;/code&gt; section for controller plugin.
To get the volume health state &lt;code&gt;value&lt;/code&gt; under controller should be set to true as seen below. To get the volume stats &lt;code&gt;value&lt;/code&gt; under node should be set to true.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; # Install the &#39;external-health-monitor&#39; sidecar accordingly.
    # Allowed values:
    #   true: enable checking of health condition of CSI volumes
    #   false: disable checking of health condition of CSI volumes
    # Default value: false
 controller:
   envs:
     - name: X_CSI_HEALTH_MONITOR_ENABLED
       value: &amp;quot;true&amp;quot;
 node:
   envs:
    # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
    # Allowed values:
    #   true: enable checking of health condition of CSI volumes
    #   false: disable checking of health condition of CSI volumes
    # Default value: false
     - name: X_CSI_HEALTH_MONITOR_ENABLED
       value: &amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>V2: PowerScale</title>
      <link>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/isilon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/isilon/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installing-csi-driver-for-powerscale-via-operator&#34;&gt;Installing CSI Driver for PowerScale via Operator&lt;/h2&gt;
&lt;p&gt;The CSI Driver for Dell PowerScale can be installed via the Dell CSI Operator.&lt;/p&gt;
&lt;p&gt;To deploy the Operator, follow the instructions available &lt;a href=&#34;../&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are sample manifests provided which can be edited to do an easy installation of the driver. Note that the deployment of the driver using the operator does not use any Helm charts and the installation and configuration parameters will be slightly different from the one specified via the Helm installer.&lt;/p&gt;
&lt;p&gt;Kubernetes Operators make it easy to deploy and manage the entire lifecycle of complex Kubernetes applications. Operators use Custom Resource Definitions (CRD) which represents the application and use custom controllers to manage them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: MKE (Mirantis Kubernetes Engine) does not support the installation of CSI-PowerScale via Operator.&lt;/p&gt;
&lt;h3 id=&#34;listing-installed-drivers-with-the-csi-isilon-crd&#34;&gt;Listing installed drivers with the CSI Isilon CRD&lt;/h3&gt;
&lt;p&gt;User can query for CSI-PowerScale driver using the following command:
&lt;code&gt;kubectl get csiisilon --all-namespaces&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;install-driver&#34;&gt;Install Driver&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create namespace.&lt;/p&gt;
&lt;p&gt;Execute &lt;code&gt;kubectl create namespace test-isilon&lt;/code&gt; to create the test-isilon namespace (if not already present). Note that the namespace can be any user-defined name, in this example, we assume that the namespace is &amp;rsquo;test-isilon&#39;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create &lt;em&gt;isilon-creds&lt;/em&gt; secret by using secret.yaml file format only.&lt;/p&gt;
&lt;p&gt;2.1   Create a yaml file called secret.yaml with the following content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; isilonClusters:
    # logical name of PowerScale Cluster
  - clusterName: &amp;quot;cluster1&amp;quot;

    # username for connecting to PowerScale OneFS API server
    # Default value: None
    username: &amp;quot;user&amp;quot;

    # password for connecting to PowerScale OneFS API server
    password: &amp;quot;password&amp;quot;

    # HTTPS endpoint of the PowerScale OneFS API server
    # Default value: None
    # Examples: &amp;quot;1.2.3.4&amp;quot;, &amp;quot;https://1.2.3.4&amp;quot;, &amp;quot;https://abc.myonefs.com&amp;quot;
    endpoint: &amp;quot;1.2.3.4&amp;quot;

    # Is this a default cluster (would be used by storage classes without ClusterName parameter)
    # Allowed values:
    #   true: mark this cluster config as default
    #   false: mark this cluster config as not default
    # Default value: false
    isDefault: true

    # Specify whether the PowerScale OneFS API server&#39;s certificate chain and host name should be verified.
    # Allowed values:
    #   true: skip OneFS API server&#39;s certificate verification
    #   false: verify OneFS API server&#39;s certificates
    # Default value: default value specified in values.yaml
    # skipCertificateValidation: true

    # The base path for the volumes to be created on PowerScale cluster
    # This will be used if a storage class does not have the IsiPath parameter specified.
    # Ensure that this path exists on PowerScale cluster.
    # Allowed values: unix absolute path
    # Default value: default value specified in values.yaml
    # Examples: &amp;quot;/ifs/data/csi&amp;quot;, &amp;quot;/ifs/engineering&amp;quot;
    # isiPath: &amp;quot;/ifs/data/csi&amp;quot;

    # The permissions for isi volume directory path
    # This will be used if a storage class does not have the IsiVolumePathPermissions parameter specified.
    # Allowed values: valid octal mode number
    # Default value: &amp;quot;0777&amp;quot;
    # Examples: &amp;quot;0777&amp;quot;, &amp;quot;777&amp;quot;, &amp;quot;0755&amp;quot;
    # isiVolumePathPermissions: &amp;quot;0777&amp;quot;

  - clusterName: &amp;quot;cluster2&amp;quot;
    username: &amp;quot;user&amp;quot;
    password: &amp;quot;password&amp;quot;
    endpoint: &amp;quot;1.2.3.4&amp;quot;
    endpointPort: &amp;quot;8080&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Replace the values for the given keys as per your environment. After creating the secret.yaml, the following command can be used to create the secret,&lt;br&gt;
&lt;code&gt;kubectl create secret generic isilon-creds -n isilon --from-file=config=secret.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the following command to replace or update the secret&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kubectl create secret generic isilon-creds -n isilon --from-file=config=secret.yaml -o yaml --dry-run | kubectl replace -f -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The user needs to validate the YAML syntax and array related key/values while replacing the isilon-creds secret.
The driver will continue to use previous values in case of an error found in the YAML file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create isilon-certs-n secret.
Please refer &lt;a href=&#34;../../helm/isilon/#certificate-validation-for-onefs-rest-api-calls&#34;&gt;this section&lt;/a&gt; for creating cert-secrets.&lt;/p&gt;
&lt;p&gt;If certificate validation is skipped, empty secret must be created. To create an empty secret. Ex: empty-secret.yaml&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: v1
kind: Secret
metadata:
   name: isilon-certs-0
   namespace: isilon
type: Opaque
data:
   cert-0: &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Execute command: &lt;code&gt;kubectl create -f empty-secret.yaml&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a CR (Custom Resource) for PowerScale using the sample files provided 
&lt;a href=&#34;https://github.com/dell/dell-csi-operator/tree/master/samples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Users should configure the parameters in CR. The following table lists the primary configurable parameters of the PowerScale driver and their default values:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dnsPolicy&lt;/td&gt;
&lt;td&gt;Determines the DNS Policy of the Node service&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;ClusterFirstWithHostNet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fsGroupPolicy&lt;/td&gt;
&lt;td&gt;Defines which FS Group policy mode to be used, Supported modes &lt;code&gt;None, File and ReadWriteOnceWithFSType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&amp;ldquo;ReadWriteOnceWithFSType&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Common parameters for node and controller&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSI_ENDPOINT&lt;/td&gt;
&lt;td&gt;The UNIX socket address for handling gRPC calls&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;/var/run/csi/csi.sock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION&lt;/td&gt;
&lt;td&gt;Specifies whether SSL security needs to be enabled for communication between PowerScale and CSI Driver&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_PATH&lt;/td&gt;
&lt;td&gt;Base path for the volumes to be created&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ALLOWED_NETWORKS&lt;/td&gt;
&lt;td&gt;Custom networks for PowerScale export. List of networks that can be used for NFS I/O traffic, CIDR format should be used&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;empty&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_AUTOPROBE&lt;/td&gt;
&lt;td&gt;To enable auto probing for driver&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_NO_PROBE_ON_START&lt;/td&gt;
&lt;td&gt;Indicates whether the controller/node should probe during initialization&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_VOLUME_PATH_PERMISSIONS&lt;/td&gt;
&lt;td&gt;The permissions for isi volume directory path&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;0777&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_AUTH_TYPE&lt;/td&gt;
&lt;td&gt;Indicates the authentication method to be used. If set to 1 then it follows as session-based authentication else basic authentication&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Controller parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_MODE&lt;/td&gt;
&lt;td&gt;Driver starting mode&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;controller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_ACCESS_ZONE&lt;/td&gt;
&lt;td&gt;Name of the access zone a volume can be created in&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;System&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISI_QUOTA_ENABLED&lt;/td&gt;
&lt;td&gt;To enable SmartQuotas&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nodeSelector&lt;/td&gt;
&lt;td&gt;Define node selection constraints for pods of controller deployment&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_HEALTH_MONITOR_ENABLED&lt;/td&gt;
&lt;td&gt;Enable/Disable health monitor of CSI volumes from Controller plugin. Provides details of volume status and volume condition. As a prerequisite, external-health-monitor sidecar section should be uncommented in samples which would install the sidecar&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Node parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_MAX_VOLUMES_PER_NODE&lt;/td&gt;
&lt;td&gt;Specify the default value for the maximum number of volumes that the controller can publish to the node&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_MODE&lt;/td&gt;
&lt;td&gt;Driver starting mode&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;node&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_HEALTH_MONITOR_ENABLED&lt;/td&gt;
&lt;td&gt;Enable/Disable health monitor of CSI volumes from node plugin. Provides details of volume usage&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Side car parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader-election-lease-duration&lt;/td&gt;
&lt;td&gt;Duration, that non-leader candidates will wait to force acquire leadership&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;20s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader-election-renew-deadline&lt;/td&gt;
&lt;td&gt;Duration, that the acting leader will retry refreshing leadership before giving up&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;15s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader-election-retry-period&lt;/td&gt;
&lt;td&gt;Duration, the LeaderElector clients should wait between tries of actions&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;5s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Execute the following command to create PowerScale custom resource:
&lt;code&gt;kubectl create -f &amp;lt;input_sample_file.yaml&amp;gt;&lt;/code&gt; .
This command will deploy the CSI-PowerScale driver in the namespace specified in the input YAML file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;From CSI-PowerScale v1.6.0 and higher, Storage class and VolumeSnapshotClass will &lt;strong&gt;not&lt;/strong&gt; be created as part of driver deployment. The user has to create Storageclass and Volume Snapshot Class.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Kubelet config dir path&amp;rdquo; is not yet configurable in case of Operator based driver installation.&lt;/li&gt;
&lt;li&gt;Also, snapshotter and resizer sidecars are not optional to choose, it comes default with Driver installation.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;volume-health-monitoring&#34;&gt;Volume Health Monitoring&lt;/h2&gt;
&lt;p&gt;This feature is introduced in CSI Driver for unity version 2.1.0.&lt;/p&gt;
&lt;h3 id=&#34;operator-based-installation&#34;&gt;Operator based installation&lt;/h3&gt;
&lt;p&gt;Volume Health Monitoring feature is optional and by default this feature is disabled for drivers when installed via operator.
To enable this feature, add the below block to the driver manifest before installing the driver. This ensures to install external health monitor sidecar. To get the volume health state &lt;code&gt;value&lt;/code&gt; under controller should be set to true as seen below. To get the volume stats &lt;code&gt;value&lt;/code&gt; under node should be set to true.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt; # Uncomment the following to install &#39;external-health-monitor&#39; sidecar to enable health monitor of CSI volumes from Controller plugin.
   # Also set the env variable controller.envs.X_CSI_HEALTH_MONITOR_ENABLED  to &amp;quot;true&amp;quot;.
   # - name: external-health-monitor
   #   args: [&amp;quot;--monitor-interval=60s&amp;quot;]
   
 # Install the &#39;external-health-monitor&#39; sidecar accordingly.
 # Allowed values:
 #   true: enable checking of health condition of CSI volumes
 #   false: disable checking of health condition of CSI volumes
 # Default value: false
  controller:
envs:
  - name: X_CSI_HEALTH_MONITOR_ENABLED
    value: &amp;quot;true&amp;quot;
node:
envs:
 # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
 # Allowed values:
 #   true: enable checking of health condition of CSI volumes
 #   false: disable checking of health condition of CSI volumes
 # Default value: false
  - name: X_CSI_HEALTH_MONITOR_ENABLED
    value: &amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>V2: PowerStore</title>
      <link>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/powerstore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/powerstore/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installing-csi-driver-for-powerstore-via-operator&#34;&gt;Installing CSI Driver for PowerStore via Operator&lt;/h2&gt;
&lt;p&gt;The CSI Driver for Dell PowerStore can be installed via the Dell CSI Operator.&lt;/p&gt;
&lt;p&gt;To deploy the Operator, follow the instructions available &lt;a href=&#34;../&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are sample manifests provided which can be edited to do an easy installation of the driver. 
Note: The deployment of the driver using the operator does not use any Helm charts. The installation and configuration parameters will be slightly different from the ones specified via the Helm installer.&lt;/p&gt;
&lt;p&gt;Kubernetes Operators make it easy to deploy and manage the entire lifecycle of complex Kubernetes applications. Operators use Custom Resource Definitions (CRD) which represents the application and use custom controllers to manage them.&lt;/p&gt;
&lt;h3 id=&#34;install-driver&#34;&gt;Install Driver&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create namespace:&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;kubectl create namespace &amp;lt;driver-namespace&amp;gt;&lt;/code&gt; using the desired name to create the namespace.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create PowerStore array connection config:&lt;/p&gt;
&lt;p&gt;Create a file called &lt;code&gt;config.yaml&lt;/code&gt; with the following content&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;arrays:
   - endpoint: &amp;quot;https://10.0.0.1/api/rest&amp;quot;     # full URL path to the PowerStore API
     globalID: &amp;quot;unique&amp;quot;                        # unique id of the PowerStore array
     username: &amp;quot;user&amp;quot;                          # username for connecting to API
     password: &amp;quot;password&amp;quot;                      # password for connecting to API
     skipCertificateValidation: true           # indicates if client side validation of (management)server&#39;s certificate can be skipped
     isDefault: true                           # treat current array as a default (would be used by storage classes without arrayID parameter)
     blockProtocol: &amp;quot;auto&amp;quot;                     # what SCSI transport protocol use on node side (FC, ISCSI, NVMeTCP, None, or auto)
     nasName: &amp;quot;nas-server&amp;quot;                     # what NAS should be used for NFS volumes
     nfsAcls: &amp;quot;0777&amp;quot;                           # (Optional) defines permissions - POSIX mode bits or NFSv4 ACLs, to be set on NFS target mount directory.
                                               # NFSv4 ACls are supported for NFSv4 shares on NFSv4 enabled NAS servers only. POSIX ACLs are not supported and only POSIX mode bits are supported for NFSv3 shares.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Change the parameters with relevant values for your PowerStore array.&lt;/p&gt;
&lt;p&gt;Add more blocks similar to above for each PowerStore array if necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create Kubernetes secret:&lt;/p&gt;
&lt;p&gt;Create a file called &lt;code&gt;secret.yaml&lt;/code&gt; in same folder as &lt;code&gt;config.yaml&lt;/code&gt; with following content&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: v1
kind: Secret
metadata:
   name: powerstore-config
   namespace: &amp;lt;driver-namespace&amp;gt;
type: Opaque
data:
   config: CONFIG_YAML
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Combine both files and create Kubernetes secret by running the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed &amp;quot;s/CONFIG_YAML/`cat config.yaml | base64 -w0`/g&amp;quot; secret.yaml | kubectl apply -f -
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Custom Resource (CR) for PowerStore using the sample files provided    &lt;a href=&#34;https://github.com/dell/dell-csi-operator/tree/master/samples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Below is a sample CR:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: storage.dell.com/v1
kind: CSIPowerStore
metadata:
  name: test-powerstore
  namespace: test-powerstore
spec:
  driver:
    configVersion: v2.2.0
    replicas: 2
    dnsPolicy: ClusterFirstWithHostNet
    forceUpdate: false
    fsGroupPolicy: ReadWriteOnceWithFSType
    common:
      image: &amp;quot;dellemc/csi-powerstore:v2.2.0&amp;quot;
      imagePullPolicy: IfNotPresent
      envs:
        - name: X_CSI_POWERSTORE_NODE_NAME_PREFIX
          value: &amp;quot;csi&amp;quot;
        - name: X_CSI_FC_PORTS_FILTER_FILE_PATH
          value: &amp;quot;/etc/fc-ports-filter&amp;quot;
    sideCars:
      - name: external-health-monitor
        args: [&amp;quot;--monitor-interval=60s&amp;quot;]

    controller:
      envs:
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: &amp;quot;false&amp;quot;
        - name: X_CSI_NFS_ACLS
          value: &amp;quot;0777&amp;quot;
      nodeSelector:
        node-role.kubernetes.io/master: &amp;quot;&amp;quot;
      tolerations:
        - key: &amp;quot;node-role.kubernetes.io/master&amp;quot;
          operator: &amp;quot;Exists&amp;quot;
          effect: &amp;quot;NoSchedule&amp;quot;

    node:
      envs:
        - name: &amp;quot;X_CSI_POWERSTORE_ENABLE_CHAP&amp;quot;
          value: &amp;quot;true&amp;quot;
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: &amp;quot;false&amp;quot;
      nodeSelector:
        node-role.kubernetes.io/worker: &amp;quot;&amp;quot;

      tolerations:
        - key: &amp;quot;node-role.kubernetes.io/worker&amp;quot;
          operator: &amp;quot;Exists&amp;quot;
          effect: &amp;quot;NoSchedule&amp;quot;
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: powerstore-config-params
  namespace: test-powerstore
data:
  driver-config-params.yaml: |
    CSI_LOG_LEVEL: &amp;quot;debug&amp;quot;
    CSI_LOG_FORMAT: &amp;quot;JSON&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Users must configure the parameters in CR. The following table lists the primary configurable parameters of the PowerStore driver and their default values:&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;replicas&lt;/td&gt;
&lt;td&gt;Controls the number of controller pods you deploy. If the number of controller pods is greater than the number of available nodes, the excess pods will be pending state till new nodes are available for scheduling. Default is 2 which allows for Controller high availability.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;namespace&lt;/td&gt;
&lt;td&gt;Specifies namespace where the drive will be installed&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&amp;ldquo;test-powerstore&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fsGroupPolicy&lt;/td&gt;
&lt;td&gt;Defines which FS Group policy mode to be used, Supported modes &lt;code&gt;None, File and ReadWriteOnceWithFSType&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&amp;ldquo;ReadWriteOnceWithFSType&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Common parameters for node and controller&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERSTORE_NODE_NAME_PREFIX&lt;/td&gt;
&lt;td&gt;Prefix to add to each node registered by the CSI driver&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&amp;ldquo;csi-node&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_FC_PORTS_FILTER_FILE_PATH&lt;/td&gt;
&lt;td&gt;To set path to the file which provides a list of WWPN which should be used by the driver for FC connection on this node&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&amp;ldquo;/etc/fc-ports-filter&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Controller parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERSTORE_EXTERNAL_ACCESS&lt;/td&gt;
&lt;td&gt;allows specifying additional entries for hostAccess of NFS volumes. Both single IP address and subnet are valid entries&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&amp;quot; &amp;quot;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_NFS_ACLS&lt;/td&gt;
&lt;td&gt;Defines permissions - POSIX mode bits or NFSv4 ACLs, to be set on NFS target mount directory.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&amp;ldquo;0777&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Node parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_POWERSTORE_ENABLE_CHAP&lt;/td&gt;
&lt;td&gt;Set to true if you want to enable iSCSI CHAP feature&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.  Execute the following command to create PowerStore custom resource:&lt;code&gt;kubectl create -f &amp;lt;input_sample_file.yaml&amp;gt;&lt;/code&gt;. The above command will deploy the CSI-PowerStore driver.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;- After that the driver should be installed, you can check the condition of driver pods by running &lt;code&gt;kubectl get all -n &amp;lt;driver-namespace&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;volume-health-monitoring&#34;&gt;Volume Health Monitoring&lt;/h2&gt;
&lt;p&gt;Volume Health Monitoring feature is optional and by default this feature is disabled for drivers when installed via operator.
To enable this feature, add the below block to the driver manifest before installing the driver. This ensures to install external
health monitor sidecar. To get the volume health state value under controller should be set to true as seen below. To get the
volume stats value under node should be set to true.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;sideCars:
# Uncomment the following to install &#39;external-health-monitor&#39; sidecar to enable health monitor of CSI volumes from Controller plugin.
# Also set the env variable controller.envs.X_CSI_HEALTH_MONITOR_ENABLED to &amp;quot;true&amp;quot;.
- name: external-health-monitor
  args: [&amp;quot;--monitor-interval=60s&amp;quot;]
controller:
envs:
  # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from Controller plugin- volume status, volume condition.
  # Install the &#39;external-health-monitor&#39; sidecar accordingly.
  # Allowed values:
  #   true: enable checking of health condition of CSI volumes
  #   false: disable checking of health condition of CSI volumes
  # Default value: false
  - name: X_CSI_HEALTH_MONITOR_ENABLED
    value: &amp;quot;false&amp;quot;
node:
envs:
  # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin- volume usage, volume condition
  # Allowed values:
  #   true: enable checking of health condition of CSI volumes
  #   false: disable checking of health condition of CSI volumes
  # Default value: false
  - name: X_CSI_HEALTH_MONITOR_ENABLED
    value: &amp;quot;false&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;dynamic-logging-configuration&#34;&gt;Dynamic Logging Configuration&lt;/h2&gt;
&lt;p&gt;This feature is introduced in CSI Driver for unity version 2.0.0.&lt;/p&gt;
&lt;h3 id=&#34;operator-based-installation&#34;&gt;Operator based installation&lt;/h3&gt;
&lt;p&gt;As part of driver installation, a ConfigMap with the name &lt;code&gt;powerstore-config-params&lt;/code&gt; is created using the manifest located in the sample file. This ConfigMap contains attributes &lt;code&gt;CSI_LOG_LEVEL&lt;/code&gt; which specifies the current log level of the CSI driver and &lt;code&gt;CSI_LOG_FORMAT&lt;/code&gt; which specifies the current log format of the CSI driver. To set the default/initial log level user can set this field during driver installation.&lt;/p&gt;
&lt;p&gt;To update the log level dynamically user has to edit the ConfigMap &lt;code&gt;powerstore-config-params&lt;/code&gt; and update &lt;code&gt;CSI_LOG_LEVEL&lt;/code&gt; to the desired log level and &lt;code&gt;CSI_LOG_FORMAT&lt;/code&gt; to the desired log format.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl edit configmap -n csi-powerstore powerstore-config-params
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;Kubelet config dir path&amp;rdquo; is not yet configurable in case of Operator based driver installation.&lt;/li&gt;
&lt;li&gt;Also, snapshotter and resizer sidecars are not optional to choose, it comes default with Driver installation.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>V2: Unity</title>
      <link>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/unity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dell.github.io/csm-docs/v2/csidriver/installation/operator/unity/</guid>
      <description>
        
        
        &lt;h2 id=&#34;csi-driver-for-unity&#34;&gt;CSI Driver for Unity&lt;/h2&gt;
&lt;h3 id=&#34;pre-requisites&#34;&gt;Pre-requisites&lt;/h3&gt;
&lt;h4 id=&#34;create-secret-to-store-unity-credentials&#34;&gt;Create secret to store Unity credentials&lt;/h4&gt;
&lt;p&gt;Create a namespace called unity (it can be any user-defined name; But commands in this section assumes that the namespace is unity)
Prepare the secret.yaml for driver configuration.
The following table lists driver configuration parameters for multiple storage arrays.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;username&lt;/td&gt;
&lt;td&gt;Username for accessing Unity system&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;password&lt;/td&gt;
&lt;td&gt;Password for accessing Unity system&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;restGateway&lt;/td&gt;
&lt;td&gt;REST API gateway HTTPS endpoint Unity system&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arrayId&lt;/td&gt;
&lt;td&gt;ArrayID for Unity system&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isDefaultArray&lt;/td&gt;
&lt;td&gt;An array having isDefaultArray=true is for backward compatibility. This parameter should occur once in the list.&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Ex: secret.yaml&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;
  storageArrayList:
    - arrayId: &amp;quot;APM00******1&amp;quot;
      username: &amp;quot;user&amp;quot;
      password: &amp;quot;password&amp;quot;
      endpoint: &amp;quot;https://10.1.1.1/&amp;quot;
      skipCertificateValidation: true
      isDefault: true
      
    - arrayId: &amp;quot;APM00******2&amp;quot;
      username: &amp;quot;user&amp;quot;
      password: &amp;quot;password&amp;quot;
      endpoint: &amp;quot;https://10.1.1.2/&amp;quot;
      skipCertificateValidation: true
  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;kubectl create secret generic unity-creds -n unity --from-file=config=secret.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the following command to replace or update the secret&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kubectl create secret generic unity-creds -n unity --from-file=config=secret.yaml -o yaml --dry-run | kubectl replace -f -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The user needs to validate the YAML syntax and array related key/values while replacing the unity-creds secret.
The driver will continue to use previous values in case of an error found in the YAML file.&lt;/p&gt;
&lt;h4 id=&#34;create-secret-for-client-side-tls-verification&#34;&gt;Create secret for client side TLS verification&lt;/h4&gt;
&lt;p&gt;Please refer detailed documentation on how to create this secret &lt;a href=&#34;../../helm/unity/#certificate-validation-for-unisphere-rest-api-calls&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If certificate validation is skipped, empty secret must be created. To create an empty secret. Ex: empty-secret.yaml&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;  apiVersion: v1
  kind: Secret
  metadata:
    name: unity-certs-0
    namespace: unity
  type: Opaque
  data:
    cert-0: &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Execute command: &lt;code&gt;kubectl create -f empty-secret.yaml&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;modifyset-the-following-optional-environment-variables&#34;&gt;Modify/Set the following &lt;em&gt;optional&lt;/em&gt; environment variables&lt;/h3&gt;
&lt;p&gt;Users should configure the parameters in CR. The following table lists the primary configurable parameters of the Unity driver and their default values:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Common parameters for node and controller&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CSI_ENDPOINT&lt;/td&gt;
&lt;td&gt;Specifies the HTTP endpoint for Unity.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;/var/run/csi/csi.sock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_UNITY_ALLOW_MULTI_POD_ACCESS&lt;/td&gt;
&lt;td&gt;Flag to enable multiple pods use the same pvc on the same node with RWO access mode&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Controller parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_MODE&lt;/td&gt;
&lt;td&gt;Driver starting mode&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;controller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_UNITY_AUTOPROBE&lt;/td&gt;
&lt;td&gt;To enable auto probing for driver&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_HEALTH_MONITOR_ENABLED&lt;/td&gt;
&lt;td&gt;Enable/Disable health monitor of CSI volumes from Controller plugin&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;&lt;strong&gt;Node parameters&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_MODE&lt;/td&gt;
&lt;td&gt;Driver starting mode&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;node&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_ISCSI_CHROOT&lt;/td&gt;
&lt;td&gt;Path to which the driver will chroot before running any iscsi commands.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;/noderoot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;X_CSI_HEALTH_MONITOR_ENABLED&lt;/td&gt;
&lt;td&gt;Enable/Disable health monitor of CSI volumes from Node plugin&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;example-cr-for-unity&#34;&gt;Example CR for Unity&lt;/h3&gt;
&lt;p&gt;Refer samples from &lt;a href=&#34;https://github.com/dell/dell-csi-operator/tree/master/samples&#34;&gt;here&lt;/a&gt;. Below is an example CR:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: storage.dell.com/v1
kind: CSIUnity
metadata:
  name: test-unity
  namespace: test-unity
spec:
  driver:
    configVersion: v2.2.0
    replicas: 2
    dnsPolicy: ClusterFirstWithHostNet
    forceUpdate: false
    common:
      image: &amp;quot;dellemc/csi-unity:v2.2.0&amp;quot;
      imagePullPolicy: IfNotPresent
    sideCars:
      - name: provisioner
        args: [&amp;quot;--volume-name-prefix=csiunity&amp;quot;,&amp;quot;--default-fstype=ext4&amp;quot;]
      - name: snapshotter
        args: [&amp;quot;--snapshot-name-prefix=csiunitysnap&amp;quot;]
      # Enable/Disable health monitor of CSI volumes from node plugin. Provides details of volume usage.
      # - name: external-health-monitor
      #   args: [&amp;quot;--monitor-interval=60s&amp;quot;]  

    controller:
       envs:
          # X_CSI_ENABLE_VOL_HEALTH_MONITOR: Enable/Disable health monitor of CSI volumes from Controller plugin. Provides details of volume status and volume condition.
          # As a prerequisite, external-health-monitor sidecar section should be uncommented in samples which would install the sidecar
          # Allowed values:
          #   true: enable checking of health condition of CSI volumes
          #   false: disable checking of health condition of CSI volumes
          # Default value: false
          - name: X_CSI_HEALTH_MONITOR_ENABLED
            value: &amp;quot;false&amp;quot;

       # nodeSelector: Define node selection constraints for controller pods.
       # For the pod to be eligible to run on a node, the node must have each
       # of the indicated key-value pairs as labels.
       # Leave as blank to consider all nodes
       # Allowed values: map of key-value pairs
       # Default value: None
       # Examples:
       #   node-role.kubernetes.io/master: &amp;quot;&amp;quot;
       nodeSelector:
       #   node-role.kubernetes.io/master: &amp;quot;&amp;quot;

       # tolerations: Define tolerations for the controllers, if required.
       # Leave as blank to install controller on worker nodes
       # Default value: None
       tolerations:
       #  - key: &amp;quot;node-role.kubernetes.io/master&amp;quot;
       #    operator: &amp;quot;Exists&amp;quot;
       #    effect: &amp;quot;NoSchedule&amp;quot;

    node:
       envs:
          # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
          # Allowed values:
          #   true: enable checking of health condition of CSI volumes
          #   false: disable checking of health condition of CSI volumes
          # Default value: false
          - name: X_CSI_HEALTH_MONITOR_ENABLED
            value: &amp;quot;false&amp;quot;
       # nodeSelector: Define node selection constraints for node pods.
       # For the pod to be eligible to run on a node, the node must have each
       # of the indicated key-value pairs as labels.
       # Leave as blank to consider all nodes
       # Allowed values: map of key-value pairs
       # Default value: None
       # Examples:
       #   node-role.kubernetes.io/master: &amp;quot;&amp;quot;
       nodeSelector:
       #   node-role.kubernetes.io/master: &amp;quot;&amp;quot;

       # tolerations: Define tolerations for the controllers, if required.
       # Leave as blank to install controller on worker nodes
       # Default value: None
       tolerations:
       #  - key: &amp;quot;node-role.kubernetes.io/master&amp;quot;
       #    operator: &amp;quot;Exists&amp;quot;
       #    effect: &amp;quot;NoSchedule&amp;quot;

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unity-config-params
  namespace: test-unity
data:
  driver-config-params.yaml: |
    CSI_LOG_LEVEL: &amp;quot;info&amp;quot;
    ALLOW_RWO_MULTIPOD_ACCESS: &amp;quot;false&amp;quot;
    MAX_UNITY_VOLUMES_PER_NODE: &amp;quot;0&amp;quot;
    SYNC_NODE_INFO_TIME_INTERVAL: &amp;quot;15&amp;quot;
    TENANT_NAME: &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;dynamic-logging-configuration&#34;&gt;Dynamic Logging Configuration&lt;/h2&gt;
&lt;p&gt;This feature is introduced in CSI Driver for unity version 2.0.0.&lt;/p&gt;
&lt;h3 id=&#34;operator-based-installation&#34;&gt;Operator based installation&lt;/h3&gt;
&lt;p&gt;As part of driver installation, a ConfigMap with the name &lt;code&gt;unity-config-params&lt;/code&gt; is created using the manifest located in the sample file. This ConfigMap contains an attribute &lt;code&gt;CSI_LOG_LEVEL&lt;/code&gt; which specifies the current log level of the CSI driver. To set the default/initial log level user can set this field during driver installation.&lt;/p&gt;
&lt;p&gt;To update the log level dynamically user has to edit the ConfigMap &lt;code&gt;unity-config-params&lt;/code&gt; and update &lt;code&gt;CSI_LOG_LEVEL&lt;/code&gt; to the desired log level.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kubectl edit configmap -n unity unity-config-params
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Prior to CSI Driver for unity version 2.0.0, the log level was allowed to be updated dynamically through &lt;code&gt;logLevel&lt;/code&gt; attribute in the secret object.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Kubelet config dir path&amp;rdquo; is not yet configurable in case of Operator based driver installation.&lt;/li&gt;
&lt;li&gt;Also, snapshotter and resizer sidecars are not optional to choose, it comes default with Driver installation.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;volume-health-monitoring&#34;&gt;Volume Health Monitoring&lt;/h2&gt;
&lt;p&gt;This feature is introduced in CSI Driver for unity version 2.1.0.&lt;/p&gt;
&lt;h3 id=&#34;operator-based-installation-1&#34;&gt;Operator based installation&lt;/h3&gt;
&lt;p&gt;Volume Health Monitoring feature is optional and by default this feature is disabled for drivers when installed via operator.
To enable this feature, add the below block to the driver manifest before installing the driver. This ensures to install external health monitor sidecar. To get the volume health state &lt;code&gt;value&lt;/code&gt; under controller should be set to true as seen below. To get the volume stats &lt;code&gt;value&lt;/code&gt; under node should be set to true.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;      # Uncomment the following to install &#39;external-health-monitor&#39; sidecar to enable health monitor of CSI volumes from Controller plugin.
      # Also set the env variable controller.envs.X_CSI_ENABLE_VOL_HEALTH_MONITOR  to &amp;quot;true&amp;quot;.
      # - name: external-health-monitor
      #   args: [&amp;quot;--monitor-interval=60s&amp;quot;]

    controller:
      envs:
        # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from Controller plugin- volume status, volume condition.
        # Install the &#39;external-health-monitor&#39; sidecar accordingly.
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: &amp;quot;false&amp;quot;

    node:
      envs:
        # X_CSI_HEALTH_MONITOR_ENABLED: Enable/Disable health monitor of CSI volumes from node plugin - volume usage
        # Allowed values:
        #   true: enable checking of health condition of CSI volumes
        #   false: disable checking of health condition of CSI volumes
        # Default value: false
        - name: X_CSI_HEALTH_MONITOR_ENABLED
          value: &amp;quot;false&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
  </channel>
</rss>
